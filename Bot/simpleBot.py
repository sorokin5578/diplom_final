import telebot
from utils.Config import TOKEN
from DBConnector.simpleDB import add_new_user, return_user, del_user
from ParsingFFIN.simpleParsingFFIN import make_all
from My_CNN_network.simpleCNN import call_network

bot = telebot.TeleBot(TOKEN)
res = {}


@bot.message_handler(commands=['start'])
def help_command(massage):
    user_from_db = return_user(massage.chat.id)
    if not user_from_db:
        res.update({massage.chat.id: []})
        bot.send_message(massage.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–π (–¥–æ 5  —à—Ç—É–∫), –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ /done"
                                          "\n–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π –∏–ª–∏ –∏—Ö —Ç–∏–∫–µ—Ä–∞–º–∏ –º–æ–∂–Ω–æ –∑–¥–µ—Å—åüëá")
        bot.send_message(massage.chat.id, "https://ffin.ru/market/directory/data/")
    else:
        res.update({user_from_db[0]: user_from_db[2:]})
        bot.send_message(massage.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{0.first_name}</b>."
                                          "\n–í—ã —É–∂–µ –æ–±—â–∞–ª–∏—Å—å —Å –±–æ—Ç–æ–º, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–∂–º–∏—Ç–µ /my_bag."
                                          "\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ /info."
                                          "\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–∂–º–∏—Ç–µ /change.".format(massage.from_user),
                         parse_mode='html')


@bot.message_handler(commands=['help'])
def help_command(massage):
    bot.send_message(massage.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–π (–¥–æ 5  —à—Ç—É–∫), –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ /done"
                                      "\n–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π –∏–ª–∏ –∏—Ö —Ç–∏–∫–µ—Ä–∞–º–∏ –º–æ–∂–Ω–æ –∑–¥–µ—Å—åüëá")
    bot.send_message(massage.chat.id, "https://ffin.ru/market/directory/data/")


@bot.message_handler(commands=['done'])
def set_of_stock(massage):
    try:
        r = ", ".join(res.get(massage.chat.id))
        bot.send_message(massage.chat.id,
                         "–í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –∞–∫—Ü–∏–π: {0}.\n–ù–∞–∂–º–∏—Ç–µ /info, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ –Ω–∏—Ö!"
                         "\n–ò–ª–∏ /repeat, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥.".format(r))
    except:
        bot.send_message(massage.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢")


@bot.message_handler(commands=['repeat'])
def repeat_command(massage):
    res.update({massage.chat.id: []})
    bot.send_message(massage.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–π (–¥–æ 5  —à—Ç—É–∫), –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ /done")


@bot.message_handler(commands=['info'])
def get_info(massage):
    try:
        user_from_db = return_user(massage.chat.id)
        if not user_from_db:
            add_new_user(massage.from_user.id, massage.from_user.first_name, res.get(massage.chat.id))
        else:
            res.update({user_from_db[0]: user_from_db[2:]})
        bot.send_message(massage.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, —è –∏—â—É üîé")
        new_res=res.get(massage.chat.id)
        if new_res:
            length = len(res.get(massage.chat.id))
            arr = make_all(res.get(massage.chat.id))
            send_info(arr, length, massage.chat.id)
        else:
            bot.send_message(massage.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢\n–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")
    except:
        bot.send_message(massage.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢\n–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")


@bot.message_handler(commands=['my_bag'])
def get_bag(massage):
    try:
        user_from_db = return_user(massage.chat.id)
        if not user_from_db:
            bot.send_message(massage.chat.id, "{0.first_name}, –≤—ã –µ—â—ë –Ω–µ –∑–∞–¥–∞–ª–∏ —Å–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å."
                                              "\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–π (–¥–æ 5  —à—Ç—É–∫), "
                                              "–∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ /done".format(massage.from_user))
        else:
            r = ", ".join(user_from_db[2:])
            bot.send_message(massage.chat.id,
                             "–í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –∞–∫—Ü–∏–π: {0}.\n–ù–∞–∂–º–∏—Ç–µ /info, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ –Ω–∏—Ö!".format(r))
    except:
        bot.send_message(massage.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢")


@bot.message_handler(commands=['change'])
def change_bag(massage):
    try:
        user_from_db = return_user(massage.chat.id)
        if not user_from_db:
            bot.send_message(massage.chat.id, "{0.first_name}, –≤—ã –µ—â—ë –Ω–µ –∑–∞–¥–∞–ª–∏ —Å–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å."
                                              "\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–π (–¥–æ 5  —à—Ç—É–∫), "
                                              "–∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ /done".format(massage.from_user))
        else:
            del_user(massage.chat.id)
            bot.send_message(massage.chat.id, "{0.first_name}, –≤–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –∞–∫—Ü–∏–π –±—ã–ª —É–¥–∞–ª–µ–Ω."
                                              "\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–π (–¥–æ 5  —à—Ç—É–∫), "
                                              "–∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ /done".format(massage.from_user))
            res.update({massage.chat.id: []})
    except:
        bot.send_message(massage.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢")


@bot.message_handler(func=lambda message: True, content_types=['text'])
def listen_msg(massage):
    user_from_db = return_user(massage.chat.id)
    if not user_from_db:
        try:
            if len(res.get(massage.chat.id)) < 4:
                res.get(massage.chat.id).append(massage.text)
                bot.send_message(massage.chat.id,
                                 "–í—ã –≤–µ–ª–∏ {0}, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /done".format(massage.text))
            elif len(res.get(massage.chat.id)) == 4:
                res.get(massage.chat.id).append(massage.text)
                r = ", ".join(res.get(massage.chat.id))
                bot.send_message(massage.chat.id,
                                 "–í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –∞–∫—Ü–∏–π: {0}.\n–ù–∞–∂–º–∏—Ç–µ /info, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ –Ω–∏—Ö!"
                                 "\n–ò–ª–∏ /repeat, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥.".format(r))
            else:
                r = ", ".join(res.get(massage.chat.id))
                bot.send_message(massage.chat.id,
                                 "–í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –∞–∫—Ü–∏–π: {0}.\n–ù–∞–∂–º–∏—Ç–µ /info, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ –Ω–∏—Ö!"
                                 "\n–ò–ª–∏ /repeat, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥.".format(r))
        except:
            bot.send_message(massage.chat.id, "–£–ø—Å, {0.first_name},—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢".format(massage.from_user))
    else:
        bot.send_message(massage.chat.id, "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–∂–º–∏—Ç–µ /my_bag."
                                          "\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ /info."
                                          "\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–∂–º–∏—Ç–µ /change.")


def send_info(arr, length, chat_id):
    cnt = 0
    info_stock = []
    for key in arr[0]:
        info_stock.clear()
        info_stock.append("<b>üè¶ –ö–æ–º–ø–∞–Ω–∏—è:</b> " + arr[0].get(key)[1])
        info_stock.append("–¢–∏–∫–µ—Ä: " + arr[0].get(key)[2])
        info_stock.append("–°—Å—ã–ª–∫–∞: " + arr[0].get(key)[0])
        el = arr[1][cnt]
        if el:
            if el[0]:
                for item1 in el[0]:
                    if item1 == "–ò–∑–º–µ–Ω–µ–Ω–∏–µ":
                        if el[0].get(item1)[0] == "up":
                            info_stock.append(item1 + ": " + el[0].get(item1)[0] + "üìà " + el[0].get(item1)[1])
                        else:
                            info_stock.append(item1 + ": " + el[0].get(item1)[0] + "üìâ " + el[0].get(item1)[1])
                        continue
                    info_stock.append(item1 + ": " + el[0].get(item1))
            if el[1]:
                info_stock.append("üì∞ –ù–æ–≤–æ—Å—Ç–∏: ")
                for item2 in el[1]:
                    forecast_num = call_network([item2])
                    if forecast_num[0][0] >= 0.5:
                        info_stock.append("–ü—Ä–æ–≥–Ω–æ–∑: –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π ‚úÖ")
                    else:
                        info_stock.append("–ü—Ä–æ–≥–Ω–æ–∑: –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π ‚ùå")
                    info_stock.append("üóû " + item2 + " " + el[1].get(item2))
            else:
                info_stock.append("üò¢ –ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç ")
        inf = "\n".join(info_stock)
        bot.send_message(chat_id, inf, parse_mode='html')
        cnt += 1
    if length != len(arr[0]):
        bot.send_message(chat_id, "üò¢ –ë–æ—Ç –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –≤—Å–µ –∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤–≤–µ–ª–∏ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–∏–∫–µ—Ä)")


bot.polling(none_stop=True)
